// <auto-generated />
using System;
using Infrastructure.Persistence.EFCore.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250219141230_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Infrastructure.Persistence.EFCore.Entity.Registration.Brand", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("código");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descrição");

                    b.HasKey("Id")
                        .HasName("id");

                    b.ToTable("marca", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Persistence.EFCore.Entity.Registration.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("código");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descrição");

                    b.HasKey("Id")
                        .HasName("id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Infrastructure.Persistence.EFCore.Entity.Registration.Customer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateOnly?>("BirthDate")
                        .IsRequired()
                        .HasColumnType("date")
                        .HasColumnName("data_de_nascimento");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("código");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("cpf");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("sobrenome");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("telefone");

                    b.HasKey("Id")
                        .HasName("id");

                    b.ToTable("cliente", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Persistence.EFCore.Entity.Registration.CustomerAddress", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Complement")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("complemento");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("bairro");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("numero");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("cep");

                    b.Property<string>("Reference")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("referencia");

                    b.HasKey("Id")
                        .HasName("id");

                    b.HasIndex("CustomerId");

                    b.ToTable("endereço", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Persistence.EFCore.Entity.Registration.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("BrandId")
                        .HasColumnType("bigint");

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("código");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descrição");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("preço");

                    b.Property<long>("Stock")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Infrastructure.Persistence.EFCore.Entity.Registration.CustomerAddress", b =>
                {
                    b.HasOne("Infrastructure.Persistence.EFCore.Entity.Registration.Customer", "Customer")
                        .WithMany("ListCustomerAddress")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fkey_id_cliente");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Infrastructure.Persistence.EFCore.Entity.Registration.Product", b =>
                {
                    b.HasOne("Infrastructure.Persistence.EFCore.Entity.Registration.Brand", "Brand")
                        .WithMany("ListProduct")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fkey_id_marca");

                    b.HasOne("Infrastructure.Persistence.EFCore.Entity.Registration.Category", "Category")
                        .WithMany("ListProduct")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fkey_id_categoria");

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Infrastructure.Persistence.EFCore.Entity.Registration.Brand", b =>
                {
                    b.Navigation("ListProduct");
                });

            modelBuilder.Entity("Infrastructure.Persistence.EFCore.Entity.Registration.Category", b =>
                {
                    b.Navigation("ListProduct");
                });

            modelBuilder.Entity("Infrastructure.Persistence.EFCore.Entity.Registration.Customer", b =>
                {
                    b.Navigation("ListCustomerAddress");
                });
#pragma warning restore 612, 618
        }
    }
}
